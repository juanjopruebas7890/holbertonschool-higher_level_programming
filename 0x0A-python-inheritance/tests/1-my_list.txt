""" test from inherit a list """

Import Function:
       >>> MyList = __import__('1-my_list').MyList

>>> module_doc = __import__('1-my_list').__doc__
     >>> print(len(module_doc) > 0)
     True

     >>> class_doc = __import__('1-my_list').MyList.__doc__
     >>> print(len(class_doc) > 0)
     True

     >>> function_doc = __import__('1-my_list').MyList.print_sorted.__doc__
     >>> print(len(function_doc) > 0)
     True


""" list empty """

    >>> i = MyList(None)
    Traceback (most recent call last):
    TypeError: 'NoneType' object is not iterable

""" list is sorted """

    >>> i = MyList([1, 2, 3])
    >>> print(i)
    [1, 2, 3]

""" two arg """

    >>> i = MyList([1, 2], [3, 4])
    Traceback (most recent call last):
    TypeError: list() takes at most 1 argument (2 given)

""" Names printing """

    >>> i = MyList()
    >>> i.append("Hello")
    >>> i.append("World")
    >>> i.append("Holberton")
    >>> i.append("School")
    >>> print(i)
    ['Hello', 'World', 'Holberton', 'School']
    >>> i.print_sorted()
    ['Hello', 'Holberton', 'School', 'World']

""" replace value """

    >>> i[0] = 9
    >>> print(i)
    [9, 2, 3]

""" delete pos """

    >>> i.remove(2)
    >>> print(i)
    [9, 3]

""" list with number """

    >>> i = MyList()
    >>> i.append(1)
    >>> i.append(2)
    >>> i.append(3)
    >>> print(i)
    [1, 2, 3]

""" list test """

    >>> i = MyList()
    >>> i.append(1)
    >>> i.append(2)
    >>> i.append(3)
    >>> i.append(4)
    >>> i.append(5)
    >>> i.append(6)
    >>> print(i)
    [1, 2, 3, 4, 5, 6]
    >>> i.print_sorted()
    [1, 2, 3, 4, 5, 6]

    >>> i = MyList()
    >>> i.append(10)
    >>> i.append(9)
    >>> i.append(8)
    >>> i.append(7)
    >>> i.append(6)
    >>> i.append(5)
    >>> print(i)
    [10, 9, 8, 7, 6, 5]
    >>> i.print_sorted()
    [5, 6, 7, 8, 9, 10]
    >>> print(i)
    [10, 9, 8, 7, 6, 5]
    >>> i = MyList()
    >>> i.append(-3)
    >>> i.append(-6)
    >>> i.append(-40)
    >>> i.append(-9)
    >>> i.append(-11)
    >>> print(i)
    [-3, -6, -40, -9, -11]
    >>> i.print_sorted()
    [-40, -11, -9, -6, -3]

    >>> issubclass(MyList, list)
    True
    >>> issubclass(list, MyList)
    False

    >>> i = MyList()
    >>> i.print_sorted()
    []

    
