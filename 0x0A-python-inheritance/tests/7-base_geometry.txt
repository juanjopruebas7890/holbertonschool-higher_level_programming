""" test for area """

Import Function:
       >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

""" Validate Area """
	 >>> 'area' in dir(BaseGeometry)
	 True

""" Validation of integer """

    >>> 'integer_validator' in dir(BaseGeometry)
    True

""" correct output """

    >>> BaseGeometry.integer_validator("my_int", 12)

    >>> BaseGeometry.integer_validator("widith", 89)

""" negative """

    >>> BaseGeometry.integer_validator("my_list", -7)
    Traceback (most recent call last):
    ...
    ValueError: my_list must be greater than 0

""" Zero """

    >>> BaseGeometry.integer_validator("my_list", 0)
    Traceback (most recent call last):
    ...
    ValueError: my_list must be greater than 0

""" list """

    >>> BaseGeometry.integer_validator("my_list", [1, 2, 3])
     Traceback (most recent call last):
    ...
    ValueError: my_list must be an integer

""" tuple """

    >>> BaseGeometry.integer_validator("my_list", (1, 2))
    Traceback (most recent call last):
    ...
    ValueError: my_list must be an integer

""" Nothing """

    >>> BaseGeometry.integer_validator()
    Traceback (most recent call last):
    ...
    TypeError: Integer Validator() missing 2 required positional arguments: 'name' and 'value'

""" String """

    >>> BaseGeometry.integer_validator("Hello", "World")
    Traceback (most recent call last):
    ...
    TypeError: string must be an integer

